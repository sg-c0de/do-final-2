---
- name: create jenkins credentials
  jenkins_script:
    script: |
      import jenkins.model.*
      import com.cloudbees.plugins.credentials.CredentialsProvider
      import com.cloudbees.plugins.credentials.CredentialsScope
      import com.cloudbees.plugins.credentials.common.StandardUsernameCredentials
      import com.cloudbees.plugins.credentials.domains.Domain
      import com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl
      def domain = Domain.global()
      def instance = Jenkins.instance
      def credstore = instance.getExtensionList(
          'com.cloudbees.plugins.credentials.SystemCredentialsProvider'
          )[0].getStore()
      def existingCreds = CredentialsProvider.lookupCredentials(
          StandardUsernameCredentials.class, instance).findResult {
              it.username == '${username}' ? it : null
          }
      def newCreds = new UsernamePasswordCredentialsImpl(
          CredentialsScope.GLOBAL, '${id}',
          '${description}', '${username}', '${password}')
      if (existingCreds) {
          credstore.updateCredentials(domain, existingCreds, newCreds)
      } else {
          credstore.addCredentials(domain, newCreds)
      }
    args:
      description: "Jenkins credentials for git"
      username: "{{ item.username }}"
      password: "{{ item.password }}"
      id: "gitlab_creds"
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
  loop: "{{ jenkins_credentials }}"
